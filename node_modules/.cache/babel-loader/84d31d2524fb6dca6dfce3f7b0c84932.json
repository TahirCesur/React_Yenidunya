{"ast":null,"code":"var _jsxFileName = \"D:\\\\02.10.2023\\\\Yay\\u0131nlanan Siteler\\\\React_Yenidunya\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { HashRouter as Router } from 'react-router-dom';\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Footer from \"./Components/common/Footer\";\nimport Header from \"./Components/common/Header\";\nimport CustomRoutes from \"./router/CustomRoutes\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    i18n\n  } = useTranslation();\n  useEffect(() => {\n    const userLanguage = navigator.language || navigator.userLanguage;\n\n    if (userLanguage.includes(\"tr\")) {\n      i18n.changeLanguage(\"tr\"); // Tarayıcı dilini Türkçe olarak algıladığında dil ayarınızı güncelleyin\n    }\n  }, []);\n\n  const changeLanguage = lng => {\n    i18n.changeLanguage(lng);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      changeLanguage: changeLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomRoutes, {\n      changeLanguage: changeLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      changeLanguage: changeLanguage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XIFq83ieJr2IDBjDrSkk+Qj6jto=\", false, function () {\n  return [useTranslation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/02.10.2023/Yayınlanan Siteler/React_Yenidunya/src/App.js"],"names":["HashRouter","Router","React","useEffect","BrowserRouter","Footer","Header","CustomRoutes","useTranslation","App","i18n","userLanguage","navigator","language","includes","changeLanguage","lng"],"mappings":";;;AAAA;AACA,SAASA,UAAU,IAAIC,MAAvB,QAAqC,kBAArC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAWF,cAAc,EAA/B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,YAAY,GAAGC,SAAS,CAACC,QAAV,IAAsBD,SAAS,CAACD,YAArD;;AACA,QAAIA,YAAY,CAACG,QAAb,CAAsB,IAAtB,CAAJ,EAAiC;AAC/BJ,MAAAA,IAAI,CAACK,cAAL,CAAoB,IAApB,EAD+B,CACJ;AAC5B;AACF,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMA,cAAc,GAAIC,GAAD,IAAS;AAC9BN,IAAAA,IAAI,CAACK,cAAL,CAAoBC,GAApB;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,cAAc,EAAED;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,cAAc,EAAEA;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,cAAc,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GArBQN,G;UACUD,c;;;KADVC,G;AAuBT,eAAeA,GAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { HashRouter as Router } from 'react-router-dom';\nimport React, { useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Footer from \"./Components/common/Footer\";\nimport Header from \"./Components/common/Header\";\nimport CustomRoutes from \"./router/CustomRoutes\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction App() {\n  const { i18n } = useTranslation();\n\n  useEffect(() => {\n    const userLanguage = navigator.language || navigator.userLanguage;\n    if (userLanguage.includes(\"tr\")) {\n      i18n.changeLanguage(\"tr\"); // Tarayıcı dilini Türkçe olarak algıladığında dil ayarınızı güncelleyin\n    }\n  }, []);\n\n  const changeLanguage = (lng) => {\n    i18n.changeLanguage(lng);\n  };\n\n  return (\n    <BrowserRouter>\n      <Header changeLanguage={changeLanguage} />\n      <CustomRoutes changeLanguage={changeLanguage} />\n      <Footer changeLanguage={changeLanguage} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}