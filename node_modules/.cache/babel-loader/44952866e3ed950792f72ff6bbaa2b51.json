{"ast":null,"code":"import _defineProperty from \"D:/15.02.2024/Yay\\u0131nlanan Siteler/React_Yenidunya/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:/15.02.2024/Yay\\u0131nlanan Siteler/React_Yenidunya/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"D:/15.02.2024/Yay\\u0131nlanan Siteler/React_Yenidunya/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"min\", \"now\", \"max\", \"label\", \"visuallyHidden\", \"striped\", \"animated\", \"className\", \"style\", \"variant\", \"bsPrefix\"],\n    _excluded2 = [\"isChild\"],\n    _excluded3 = [\"min\", \"now\", \"max\", \"label\", \"visuallyHidden\", \"striped\", \"animated\", \"bsPrefix\", \"variant\", \"className\", \"children\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  var children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  var error = null;\n  React.Children.forEach(children, function (child) {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    var element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    var childType = child.type;\n    var childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \".concat(componentName, \" can contain only ProgressBar \") + \"components. Found \".concat(childIdentifier, \".\"));\n  });\n  return error;\n}\n\nfunction getPercentage(now, min, max) {\n  var percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar(_ref, ref) {\n  var _classNames;\n\n  var min = _ref.min,\n      now = _ref.now,\n      max = _ref.max,\n      label = _ref.label,\n      visuallyHidden = _ref.visuallyHidden,\n      striped = _ref.striped,\n      animated = _ref.animated,\n      className = _ref.className,\n      style = _ref.style,\n      variant = _ref.variant,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    role: \"progressbar\",\n    className: classNames(className, \"\".concat(bsPrefix, \"-bar\"), (_classNames = {}, _defineProperty(_classNames, \"bg-\".concat(variant), variant), _defineProperty(_classNames, \"\".concat(bsPrefix, \"-bar-animated\"), animated), _defineProperty(_classNames, \"\".concat(bsPrefix, \"-bar-striped\"), animated || striped), _classNames)),\n    style: _objectSpread({\n      width: \"\".concat(getPercentage(now, min, max), \"%\")\n    }, style),\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  }));\n}\n\nvar ProgressBar = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var _ref2$isChild = _ref2.isChild,\n      isChild = _ref2$isChild === void 0 ? false : _ref2$isChild,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var props = _objectSpread({\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false\n  }, rest);\n\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  var min = props.min,\n      now = props.now,\n      max = props.max,\n      label = props.label,\n      visuallyHidden = props.visuallyHidden,\n      striped = props.striped,\n      animated = props.animated,\n      bsPrefix = props.bsPrefix,\n      variant = props.variant,\n      className = props.className,\n      children = props.children,\n      wrapperProps = _objectWithoutProperties(props, _excluded3);\n\n  return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({\n    ref: ref\n  }, wrapperProps), {}, {\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, function (child) {\n      return /*#__PURE__*/cloneElement(child, {\n        isChild: true\n      });\n    }) : renderProgressBar({\n      min: min,\n      now: now,\n      max: max,\n      label: label,\n      visuallyHidden: visuallyHidden,\n      striped: striped,\n      animated: animated,\n      bsPrefix: bsPrefix,\n      variant: variant\n    }, ref)\n  }));\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;","map":{"version":3,"sources":["D:/15.02.2024/YayÄ±nlanan Siteler/React_Yenidunya/node_modules/react-bootstrap/esm/ProgressBar.js"],"names":["classNames","React","cloneElement","useBootstrapPrefix","map","jsx","_jsx","ROUND_PRECISION","onlyProgressBar","props","propName","componentName","children","error","Children","forEach","child","element","ProgressBar","type","childType","childIdentifier","isValidElement","displayName","name","Error","getPercentage","now","min","max","percentage","Math","round","renderProgressBar","ref","label","visuallyHidden","striped","animated","className","style","variant","bsPrefix","role","width","forwardRef","isChild","rest","wrapperProps"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n\n/**\n * Validate that children, if any, are instances of `ProgressBar`.\n */\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  ...rest\n}, ref) => {\n  const props = {\n    min: 0,\n    max: 100,\n    animated: false,\n    visuallyHidden: false,\n    striped: false,\n    ...rest\n  };\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}