{"ast":null,"code":"import _objectSpread from \"D:/15.02.2024/Yay\\u0131nlanan Siteler/React_Yenidunya/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"D:/15.02.2024/Yay\\u0131nlanan Siteler/React_Yenidunya/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"bsPrefix\", \"drop\", \"show\", \"className\", \"align\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\", \"autoClose\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nvar DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  Component: 'hr',\n  defaultProps: {\n    role: 'separator'\n  }\n});\nvar DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nvar Dropdown = /*#__PURE__*/React.forwardRef(function (pProps, ref) {\n  var _useUncontrolled = useUncontrolled(pProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      _useUncontrolled$drop = _useUncontrolled.drop,\n      drop = _useUncontrolled$drop === void 0 ? 'down' : _useUncontrolled$drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      _useUncontrolled$alig = _useUncontrolled.align,\n      align = _useUncontrolled$alig === void 0 ? 'start' : _useUncontrolled$alig,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      _useUncontrolled$auto = _useUncontrolled.autoClose,\n      autoClose = _useUncontrolled$auto === void 0 ? true : _useUncontrolled$auto,\n      props = _objectWithoutProperties(_useUncontrolled, _excluded);\n\n  var isInputGroup = useContext(InputGroupContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var isRTL = useIsRTL();\n\n  var isClosingPermitted = function isClosingPermitted(source) {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click'; // autoClose=inside doesn't permit close on rootClose\n\n    if (autoClose === 'inside') return source !== 'rootClose'; // autoClose=outside doesn't permit close on select\n\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n\n  var handleToggle = useEventCallback(function (nextShow, meta) {\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null ? void 0 : onToggle(nextShow, meta);\n  });\n  var alignEnd = align === 'end';\n  var placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  var contextValue = useMemo(function () {\n    return {\n      align: align,\n      drop: drop,\n      isRTL: isRTL\n    };\n  }, [align, drop, isRTL]);\n  var directionClasses = {\n    down: prefix,\n    'down-centered': \"\".concat(prefix, \"-center\"),\n    up: 'dropup',\n    'up-centered': 'dropup-center dropup',\n    end: 'dropend',\n    start: 'dropstart'\n  };\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: \".\".concat(prefix, \"-item:not(.disabled):not(:disabled)\"),\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({}, props), {}, {\n        ref: ref,\n        className: classNames(className, show && 'show', directionClasses[drop])\n      }))\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});","map":{"version":3,"sources":["D:/15.02.2024/YayÄ±nlanan Siteler/React_Yenidunya/node_modules/react-bootstrap/esm/Dropdown.js"],"names":["classNames","React","useContext","useMemo","BaseDropdown","useUncontrolled","useEventCallback","DropdownContext","DropdownItem","DropdownMenu","getDropdownMenuPlacement","DropdownToggle","InputGroupContext","useBootstrapPrefix","useIsRTL","createWithBsPrefix","alignPropType","jsx","_jsx","DropdownHeader","defaultProps","role","DropdownDivider","Component","DropdownItemText","Dropdown","forwardRef","pProps","ref","show","bsPrefix","drop","className","align","onSelect","onToggle","focusFirstItemOnShow","as","_4","navbar","autoClose","props","isInputGroup","prefix","isRTL","isClosingPermitted","source","handleToggle","nextShow","meta","originalEvent","currentTarget","document","key","alignEnd","placement","contextValue","directionClasses","down","up","end","start","Provider","value","children","itemSelector","displayName","Object","assign","Toggle","Menu","Item","ItemText","Divider","Header"],"mappings":"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","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport BaseDropdown from '@restart/ui/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu, { getDropdownMenuPlacement } from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport InputGroupContext from './InputGroupContext';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nconst DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  Component: 'hr',\n  defaultProps: {\n    role: 'separator'\n  }\n});\nconst DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nconst Dropdown = /*#__PURE__*/React.forwardRef((pProps, ref) => {\n  const {\n    bsPrefix,\n    drop = 'down',\n    show,\n    className,\n    align = 'start',\n    onSelect,\n    onToggle,\n    focusFirstItemOnShow,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    navbar: _4,\n    autoClose = true,\n    ...props\n  } = useUncontrolled(pProps, {\n    show: 'onToggle'\n  });\n  const isInputGroup = useContext(InputGroupContext);\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  const isRTL = useIsRTL();\n  const isClosingPermitted = source => {\n    // autoClose=false only permits close on button click\n    if (autoClose === false) return source === 'click';\n\n    // autoClose=inside doesn't permit close on rootClose\n    if (autoClose === 'inside') return source !== 'rootClose';\n\n    // autoClose=outside doesn't permit close on select\n    if (autoClose === 'outside') return source !== 'select';\n    return true;\n  };\n  const handleToggle = useEventCallback((nextShow, meta) => {\n    if (meta.originalEvent.currentTarget === document && (meta.source !== 'keydown' || meta.originalEvent.key === 'Escape')) meta.source = 'rootClose';\n    if (isClosingPermitted(meta.source)) onToggle == null ? void 0 : onToggle(nextShow, meta);\n  });\n  const alignEnd = align === 'end';\n  const placement = getDropdownMenuPlacement(alignEnd, drop, isRTL);\n  const contextValue = useMemo(() => ({\n    align,\n    drop,\n    isRTL\n  }), [align, drop, isRTL]);\n  const directionClasses = {\n    down: prefix,\n    'down-centered': `${prefix}-center`,\n    up: 'dropup',\n    'up-centered': 'dropup-center dropup',\n    end: 'dropend',\n    start: 'dropstart'\n  };\n  return /*#__PURE__*/_jsx(DropdownContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(BaseDropdown, {\n      placement: placement,\n      show: show,\n      onSelect: onSelect,\n      onToggle: handleToggle,\n      focusFirstItemOnShow: focusFirstItemOnShow,\n      itemSelector: `.${prefix}-item:not(.disabled):not(:disabled)`,\n      children: isInputGroup ? props.children : /*#__PURE__*/_jsx(Component, {\n        ...props,\n        ref: ref,\n        className: classNames(className, show && 'show', directionClasses[drop])\n      })\n    })\n  });\n});\nDropdown.displayName = 'Dropdown';\nexport default Object.assign(Dropdown, {\n  Toggle: DropdownToggle,\n  Menu: DropdownMenu,\n  Item: DropdownItem,\n  ItemText: DropdownItemText,\n  Divider: DropdownDivider,\n  Header: DropdownHeader\n});"]},"metadata":{},"sourceType":"module"}