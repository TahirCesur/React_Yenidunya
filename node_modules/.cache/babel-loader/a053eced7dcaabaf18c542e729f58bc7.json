{"ast":null,"code":"import _objectSpread from \"D:/02.10.2023/Yay\\u0131nlanan Siteler/React_Yenidunya/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"D:/02.10.2023/Yay\\u0131nlanan Siteler/React_Yenidunya/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"label\", \"as\", \"onClick\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar NavbarToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? 'Toggle navigation' : _ref$label,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      onClick = _ref.onClick,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n\n  var _ref2 = useContext(NavbarContext) || {},\n      onToggle = _ref2.onToggle,\n      expanded = _ref2.expanded;\n\n  var handleClick = useEventCallback(function (e) {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed'),\n    children: children || /*#__PURE__*/_jsx(\"span\", {\n      className: \"\".concat(bsPrefix, \"-icon\")\n    })\n  }));\n});\nNavbarToggle.displayName = 'NavbarToggle';\nexport default NavbarToggle;","map":{"version":3,"sources":["D:/02.10.2023/YayÄ±nlanan Siteler/React_Yenidunya/node_modules/react-bootstrap/esm/NavbarToggle.js"],"names":["classNames","React","useContext","useEventCallback","useBootstrapPrefix","NavbarContext","jsx","_jsx","NavbarToggle","forwardRef","ref","bsPrefix","className","children","label","as","Component","onClick","props","onToggle","expanded","handleClick","e","type","displayName"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,IAAMC,YAAY,GAAG,aAAaP,KAAK,CAACQ,UAAN,CAAiB,gBAShDC,GATgD,EASxC;AAAA,MARTC,QAQS,QARTA,QAQS;AAAA,MAPTC,SAOS,QAPTA,SAOS;AAAA,MANTC,QAMS,QANTA,QAMS;AAAA,wBALTC,KAKS;AAAA,MALTA,KAKS,2BALD,mBAKC;AAAA,qBAHTC,EAGS;AAAA,MAHLC,SAGK,wBAHO,QAGP;AAAA,MAFTC,OAES,QAFTA,OAES;AAAA,MADNC,KACM;;AACTP,EAAAA,QAAQ,GAAGP,kBAAkB,CAACO,QAAD,EAAW,gBAAX,CAA7B;;AACA,cAGIT,UAAU,CAACG,aAAD,CAAV,IAA6B,EAHjC;AAAA,MACEc,QADF,SACEA,QADF;AAAA,MAEEC,QAFF,SAEEA,QAFF;;AAIA,MAAMC,WAAW,GAAGlB,gBAAgB,CAAC,UAAAmB,CAAC,EAAI;AACxC,QAAIL,OAAJ,EAAaA,OAAO,CAACK,CAAD,CAAP;AACb,QAAIH,QAAJ,EAAcA,QAAQ;AACvB,GAHmC,CAApC;;AAIA,MAAIH,SAAS,KAAK,QAAlB,EAA4B;AAC1BE,IAAAA,KAAK,CAACK,IAAN,GAAa,QAAb;AACD;;AACD,SAAO,aAAahB,IAAI,CAACS,SAAD,kCACnBE,KADmB;AAEtBR,IAAAA,GAAG,EAAEA,GAFiB;AAGtBO,IAAAA,OAAO,EAAEI,WAHa;AAItB,kBAAcP,KAJQ;AAKtBF,IAAAA,SAAS,EAAEZ,UAAU,CAACY,SAAD,EAAYD,QAAZ,EAAsB,CAACS,QAAD,IAAa,WAAnC,CALC;AAMtBP,IAAAA,QAAQ,EAAEA,QAAQ,IAAI,aAAaN,IAAI,CAAC,MAAD,EAAS;AAC9CK,MAAAA,SAAS,YAAKD,QAAL;AADqC,KAAT;AANjB,KAAxB;AAUD,CAhCiC,CAAlC;AAiCAH,YAAY,CAACgB,WAAb,GAA2B,cAA3B;AACA,eAAehB,YAAf","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst NavbarToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  label = 'Toggle navigation',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'navbar-toggler');\n  const {\n    onToggle,\n    expanded\n  } = useContext(NavbarContext) || {};\n  const handleClick = useEventCallback(e => {\n    if (onClick) onClick(e);\n    if (onToggle) onToggle();\n  });\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    onClick: handleClick,\n    \"aria-label\": label,\n    className: classNames(className, bsPrefix, !expanded && 'collapsed'),\n    children: children || /*#__PURE__*/_jsx(\"span\", {\n      className: `${bsPrefix}-icon`\n    })\n  });\n});\nNavbarToggle.displayName = 'NavbarToggle';\nexport default NavbarToggle;"]},"metadata":{},"sourceType":"module"}